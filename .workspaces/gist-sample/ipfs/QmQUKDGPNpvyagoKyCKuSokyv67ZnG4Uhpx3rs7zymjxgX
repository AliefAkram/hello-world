{"compiler":{"version":"0.4.23+commit.124ca40d"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"initialAddressSet","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"endGrantAuthentication","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"revokeAuthentication","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pending","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"contracts","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"delegateProxyImplementation","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"proxies","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"startGrantAuthentication","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"registerProxy","outputs":[{"name":"proxy","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"DELAY_PERIOD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"authAddress","type":"address"}],"name":"grantInitialAuthentication","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"devdoc":{"methods":{"endGrantAuthentication(address)":{"details":"ProxyRegistry owner only\r","params":{"addr":"Address to which to grant permissions\r"}},"grantInitialAuthentication(address)":{"details":"No delay, can only be called once - after that the standard registry process with a delay must be used\r","params":{"authAddress":"Address of the contract to grant authentication\r"}},"registerProxy()":{"details":"Must be called by the user which the proxy is for, creates a new AuthenticatedProxy\r","return":"New AuthenticatedProxy contract\r"},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract.\r"},"revokeAuthentication(address)":{"details":"ProxyRegistry owner only\r","params":{"addr":"Address of which to revoke permissions\r"}},"startGrantAuthentication(address)":{"details":"ProxyRegistry owner only\r","params":{"addr":"Address to which to grant permissions\r"}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.\r","params":{"newOwner":"The address to transfer ownership to.\r"}}}},"userdoc":{"methods":{"endGrantAuthentication(address)":{"notice":"End the process to nable access for specified contract after delay period has passed.\r "},"grantInitialAuthentication(address)":{"notice":"Grant authentication to the initial Exchange protocol contract\r "},"registerProxy()":{"notice":"Register a proxy contract with this registry\r "},"revokeAuthentication(address)":{"notice":"Revoke access for specified contract. Can be done instantly.\r "},"startGrantAuthentication(address)":{"notice":"Start the process to enable access for specified contract. Subject to delay period.\r "}}}},"settings":{"compilationTarget":{"Unlilted.sol":"OpenSeaSharedStorefront"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"Unlilted.sol":{"keccak256":"0x358500ebad70c738b91278ee4f60e9df7b751c36d2afb8787d03a6a2a2d1a8d9","urls":["bzzr://f7d30175e19f93622d1524955cdbf57f7ff0226d74c21ddd69dc59d8d14f34f5"]}},"version":1}